buildscript {
    dependencies {
        classpath 'io.fabric.tools:gradle:1.28.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "org.exoplatform"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 55
        versionName "6.2.6"
        manifestPlaceholders = [
                crashlyticsApiKey: "b8421f485868032ad402cef01a4bd7c70263d97e",
                appLabelEnvironmentSuffix:""
        ]
    }
    signingConfigs {
        release
    }
    useLibrary 'org.apache.http.legacy'

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    flavorDimensions "mode"
    productFlavors {
        local {
            dimension "mode"
        }
        beta {
            dimension "mode"
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
            manifestPlaceholders = [appLabelEnvironmentSuffix:" (beta)"]
        }
        store {
            dimension "mode"
        }
    }
    // Ignore certain variants
    variantFilter { variant ->
        def names = variant.flavors*.name
        if (variant.buildType.name.contains("debug")) {
            if (names.contains("beta") || names.contains("store")) {
                setIgnore(true)
            }
        } else if (variant.buildType.name.contains("release")) {
            if (names.contains("local")) {
                setIgnore(true)
            }
        }
    }

    lintOptions {
        warning 'InvalidPackage'
        // FIXME: remove this lint option on EllipsizeMaxLines
        // temporarily changed to warning instead of error due to project timing constraints
        // (https://issuetracker.google.com/issues/36950033)
        warning 'EllipsizeMaxLines'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.0'
    testImplementation 'org.mockito:mockito-core:2.10.0'

    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.squareup.retrofit2:retrofit:2.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.12.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.3'
    implementation 'org.jsoup:jsoup:1.9.1'
    implementation 'com.google.firebase:firebase-core:17.5.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.4'
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'
}

apply plugin: 'com.google.gms.google-services'